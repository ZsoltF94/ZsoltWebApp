@page "/todo-list"

@using ToDoWebApp.Pages



<div class="outer-container">
    <div class="todolist-body">

        
        <!-- Task Input-->
        <div style="display: flex; align-items: flex-start; gap: 0.5rem;">
            <input class= "task-input" @bind="newTask" placeholder="Enter new task..."/>
            <textarea class="task-description-input" @bind="newDescription" placeholder="Enter description..." rows="2"  ></textarea>
            <select class="select" @bind="newPrio">
                <option value="low">Low</option>
                <option value="normal">Normal</option>
                <option value="high">High</option>
            </select>
            <button class="bi bi-plus-circle-fill todo-icon" @onclick="AddTask" ></button>
        </div>


        <!-- Prio Filter-->
        <h5 style="color: #cddae6" >Prio-Filter</h5>
        <div style="margin-bottom: 1rem;
                    margin-top: 0rem;">
            <select class="select" @bind="prioFilter">
                <option value="all">All</option>
                <option value="low">Low</option>
                <option value="normal">Normal</option>
                <option value="high">High</option>
            </select>
        </div>



        <!-- Outer Container Table --> 
        <div style="display: flex; gap: 1rem;min-height: 440px;
                    width: 50rem;">

            <!-- Left Side of Table -->
            <div style="width: 45%; margin-left: 0;">    

                <!-- Title Open -->
                <h4 class="column-title-open">Open</h4>
            
                @foreach(var task in tasks.Where(task =>        
                                                    (!task.IsDone && prioFilter == "all" || task.Prio == prioFilter && !task.IsDone )))
                {
                    <!-- Open Tasks -->
                        
                    <div class="task-item" 
                        draggable="true"
                        style="flex: 0 0 300px;">
                        
                            
                        <!-- checkbox  -->
                        <input style="margin-right: 0.5rem;"type="checkbox" @bind="task.IsDone"/>
                                
                        <!-- Task name -->
                        <span style="color: #cddae6">@task.TaskName</span>
                        <!-- Prio -->       
                        <strong>                   
                            <span style="font-size: x-large; margin-left: 0.5rem; color: @(task.Prio switch
                            {
                                "high" => "red",
                                "normal" => "orange",
                                "low" => "green",
                                _=> ""
                            })">        
                            ‚óè
                            </span>
                        </strong>

                        <br />

                        <!-- Container for Description box-shadow & Delete Button line-up -->
                        <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 1rem;">      
                            <div>
                                <!-- Description -->
                                <textarea class="task-description-input" @bind="task.TaskDescription"
                                    rows="2"
                                    style="color: rgb(131, 127, 127); 
                                            resize: height;
                                            width: 100%">     
                                    
                                </textarea>
                            </div>

                            <div>   
                                <!-- Delete Button -->
                                <button class="delete-btn" @onclick="@(() =>DeleteTask(task))">       
                                    üóë
                                </button><br />
                            </div>
                                
                        </div> 
                    </div>                                 
                }
            </div>

            <!-- Separator Line -->
            <div style="width: 1px; background-color: #ccc; height: auto;">
                
            </div>



            <!-- Right Side of Table -->
            <div style="width: 45%;margin-right: 0;">    

                <!-- Title Open -->
                <h4 class="column-title-done">Done</h4>
            
                @foreach(var task in tasks.Where(task =>        
                                                    (task.IsDone && prioFilter == "all" || task.Prio == prioFilter && task.IsDone  )))
                {
                    <!-- Done Tasks -->
                        
                    <div class="task-item" 
                        draggable="true"
                        style="flex: 0 0 300px;">
                        
                            
                        <!-- checkbox  -->
                        <input style="margin-right: 0.5rem;"type="checkbox" @bind="task.IsDone"/>
                                
                        <!-- Task name -->
                        <span style="color: white;">@task.TaskName</span>
                        <!-- Prio -->       
                        <strong>                   
                            <span style="font-size: x-large; margin-left: 0.5rem; color: @(task.Prio switch
                            {
                                "high" => "red",
                                "normal" => "orange",
                                "low" => "green",
                                _=> ""
                            })">        
                            ‚óè
                            </span>
                        </strong>

                        <br />

                        <!-- Container for Description box-shadow & Delete Button line-up -->
                        <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 1rem;">      
                            <div>
                                <!-- Description -->
                                <textarea class="task-description-input" @bind="task.TaskDescription"      
                                    rows="2"
                                    style="color: rgb(131, 127, 127); 
                                            resize: both;
                                            width: 100%;">
                                </textarea>
                            </div>

                            <div>   
                                <!-- Delete Button -->
                                <button class="delete-btn" @onclick="@(() =>DeleteTask(task))">       
                                    üóë
                                </button><br />
                            </div>
                                
                        </div> 
                    </div>                                 
                }
            </div>

        </div>  
    </div>

</div>



<div class="page-text-box">
    <div class="text">
       <h1 id="todo-list-blazor-webapp">ToDo List ‚Äì Blazor WebApp</h1>
        <p>This is a simple to-do list implemented as a Blazor component in C#. Users can add and delete tasks, assign priorities, and move tasks between &quot;open&quot; and &quot;done&quot; using drag and drop. Task filtering by status and priority is also available.</p>
        <hr>
        <h2 id="author">Author</h2>
        <p><strong>ZsoltF94</strong><br>GitHub: <a href="https://github.com/ZsoltF94/contacts">github.com/ZsoltF94/contacts</a></p>
        <hr>
        <h2 id="features">Features</h2>
        <ul>
        <li>Create tasks with:<ul>
        <li>Title</li>
        <li>Description</li>
        <li>Priority (e.g., &quot;normal&quot;, &quot;high&quot;, etc.)</li>
        </ul>
        </li>
        <li>Delete tasks</li>
        <li>Change task status</li>
        <li>Filter by:<ul>
        <li>Status (all, open, done)</li>
        <li>Priority</li>
        </ul>
        </li>
        <li>Pure client-side Blazor component (no JavaScript required)</li>
        </ul>
        <hr>
        <h2 id="technologies">Technologies</h2>
        <ul>
        <li>Blazor WebAssembly</li>
        <li>C#</li>
        <li>No external libraries or frameworks required</li>
        </ul>
        <hr>
        <h2 id="project-structure">Project Structure</h2>
        <pre><code>ToDo<span class="hljs-selector-class">.razor</span>         <span class="hljs-comment">// UI component</span>
        ToDo<span class="hljs-selector-class">.razor</span><span class="hljs-selector-class">.cs</span>      <span class="hljs-comment">// Component logic (code-behind)</span>
        TaskItem<span class="hljs-selector-class">.cs</span>        <span class="hljs-comment">// Task data model</span>
        <hr>
        </code></pre><h2 id="usage">Usage</h2>
        <ol>
        <li>Integrate into a Blazor WebAssembly app (e.g., place in <code>Pages/ToDo.razor</code>)</li>
        <li>Run the app using <code>dotnet run</code> or through Visual Studio</li>
        <li>Open the <code>/ToDo</code> page in your browser</li>
        </ol>
        <hr>
        <h2 id="notes">Notes</h2>
        <ul>
        <li>Drag and drop is to be added in the future.</li>
        <li>Tasks are not persisted (no LocalStorage or backend).</li>
        <li>The component is modular and can be extended or embedded in larger projects.</li>
        </ul>
        <hr>
        <h2 id="license">License</h2>
        <p>MIT ‚Äì free to use and modify.</p>


    </div>
</div>


<style>
    .page-text-box{        
        width: 50rem;
        margin: 50px auto; 
       
        height: auto;
        padding: 20px;
        background-color: rgba(0, 0, 0, 0.37);
        border-radius: 20px;
        box-shadow: 0 0 15px 4px rgba(123, 175, 224, 0.13);       
    }

    .text{
        color: white;
    }

    .delete-btn{ 
        background-color: rgb(220, 20, 60);
        color: aliceblue;
        border: none;
        padding: 0.4rem 0.6rem;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.2s ease;
    }

    .delete-btn:hover
    {
        background-color: darkred;
    }

    .column-title-done
    {
        background-color: rgb(99, 255, 99);
        width: 100%;
        color: aliceblue;
        border: none;
        padding: 0.4rem 0.6rem;
        border-radius: 4px;
        transition: background-color 0.2s ease;
    }

    .column-title-open
    {
        background-color: rgb(255, 99, 99);
        width: 100%;
        color: aliceblue;
        border: none;
        padding: 0.4rem 0.6rem;
        border-radius: 4px;
        transition: background-color 0.2s ease;
    }

    .task-item
    {
        padding: 0.5rem;
        border-radius: 6px;
        transition: box-shadow 0.2s ease; background-color: 0.2s ease;

    }

    .task-item:hover{
    
        background-color: rgba(255, 255, 255, 0.05); /* leicht aufhellen */
        box-shadow: 0 0 8px rgba(255, 255, 255, 0.2);
        cursor: grab;
    }

    .todolist-body{
        
        width: 50rem;
        padding: 20px;
        min-height: 70vh;
        align-items: center;
        justify-content: center;
        background-color: rgba(0, 0, 0, 0.233);
        border-radius: 10px;
        box-shadow: 0 0 15px 4px rgba(83, 125, 145, 0.123);
        
    }

    .outer-container{
        display: flex;
        justify-content: center;
        align-items: center;

    }

    .bi-plus-circle-fill{
        background-color: #5f89ac00;
        color: white;
        border: none;
        border-radius: 10000px;
        transition: box-shadow 0.3s ease;
    }

    .bi-plus-circle-fill:hover{
        box-shadow: 0 0 4px 4px rgba(105, 149, 167, 0.589);
        transition: box-shadow 0.3s ease;
    }

    .task-input{
        background-color: #bac9d6;
        color: #464646;
        border-radius: 8px;
        border: none;        
    }

    .task-description-input{
        background-color: #bac9d6;
        color: #464646;
        border-radius: 8px;
        border: none; 
    }

    .select{
        background-color: #bac9d6;
        border-radius: 8px;
        border: none; 
    }
    

 


</style>






    

<!-- List end -->




